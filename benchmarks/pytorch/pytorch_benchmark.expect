#!/usr/bin/expect -f

#starts guest vm, run benchmarks, poweroff
set timeout -1

set curr_dir [file normalize [file dirname $argv0]]

#first argument indicates td type: td or efi
set vm_type [lindex $argv 0];
#second argument indicates number of cores -> threads for pytorch
set cores [lindex $argv 1];
#third argument indicates gigs of memory for the VM
set memory [lindex $argv 2];
#fourth argument indicates EPC memory for the VM (only for SGX vm_type)
set epc_memory [lindex $argv 3];

#Start the guest VM
if { $vm_type == "sgx"} {
  spawn sudo $curr_dir/../../start-qemu.sh -i $curr_dir/td-guest-ubuntu-22.04.qcow2 -k $curr_dir/vmlinuz -t $vm_type -b direct -c $cores -g $memory -u $epc_memory
} else {
  spawn sudo $curr_dir/../../start-qemu.sh -i $curr_dir/td-guest-ubuntu-22.04.qcow2 -k $curr_dir/vmlinuz -t $vm_type -b direct -c $cores -g $memory 
}
#Login process
expect "login: "
#Enter username
send -- "root\r"

#Enter Password
expect "Password: "
send -- "123456\r"

#Expect the login to be done
expect "# "
send -- "cd /root/examples/pytorch\r"
#Expect the cd to be done
expect "# "
if { $vm_type == "sgx"} {
  #run both the gramine-sgx and gramine-direct variants
  send -- "gramine-sgx ./pytorch pytorchexample.py $cores vm-gramine-sgx\r"
  expect "# "
  send -- "gramine-direct ./pytorch pytorchexample.py $cores vm-gramine-direct\r"
} else {
  send -- "python3 pytorchexample.py $cores $vm_type\r"
}
#expect the experiment to finish and poweroff the Guest VM
expect "# "
send -- "shutdown -h now\r"
