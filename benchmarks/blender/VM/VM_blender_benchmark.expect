#!/usr/bin/expect -f

# starts guest vm, run benchmarks, poweroff
set timeout -1

set curr_dir [file normalize [file dirname $argv0]]

# first argument indicates td type: td or efi
set vm_type [lindex $argv 0];
# second argument indicates number of cores
set cores [lindex $argv 1];
# third argument indicates gigs of memory for the VM
set memory [lindex $argv 2];

# Start the guest VM
spawn sudo numactl --cpunodebind=0 --membind=0 $curr_dir/../../common/VM/run_vm_td.sh -i $curr_dir/../../common/VM/tdx/guest-tools/image/tdx-guest-ubuntu-24.04-generic.qcow2 -t $vm_type -c $cores -m $memory

# Login process
expect "login: "
# Enter username
send -- "root\r"

# Enter Password
expect "Password: "
send -- "123456\r"

# Expect the login to be done
expect "# "
send -- "cd /root/gramine/CI-Examples/blender\r"
# Expect the cd to be done
expect "# "
# wait for the VM (especially the SGX-enabled) to be properly initialized
sleep 5
# Manual blender execution
send -- "make clean && make\r"
expect -- "# "
send -- "rm -f ./data/images/simple_scene.blend0001.png\r"
expect "# "
send -- "export DATA_DIR=./data\r"
expect "# "
send -- "LD_LIBRARY_PATH=./blender_dir/lib/ ./blender_dir/blender \
-b ./data/scenes/simple_scene.blend -t $cores -F PNG -o ./data/images/simple_scene.blend -f 1 \
| grep \"Saving\" | tee ./results/${vm_type}_${cores}_threads.txt\r"

# expect the experiment to finish and poweroff the Guest VM
expect "# "
send -- "shutdown -h now\r"
# wait till the VM shuts down
expect "$ "
